======================================JWT
JWT json web token的格式：header.payload.signature，使用了数字签名，所以是可信任和安全的。
header中用于存放签名的生成算法
{"alg": "HS512"}
payload中用于存放用户名、token的生成时间和过期时间
{"sub":"admin","created":1489079981393,"exp":1489684781}
signature为以header和payload生成的签名，一旦header和payload被篡改，验证将失败
String signature = HMACSHA512(base64UrlEncode(header) + "." +base64UrlEncode(payload),secret)

JWT实现认证和授权的原理：
用户调用登录接口，登录成功后获取到JWT的token；
之后用户每次调用接口都在http的header中添加一个叫Authorization的头，值为JWT的token；
后台程序通过对Authorization头中信息的解码及数字签名校验来获取其中的用户信息，从而实现认证和授权。

配置：
tokenHeader: Authorization #JWT存储的请求头
secret: mall-admin-secret #JWT加解密使用的密钥
expiration: 604800 #JWT的超期限时间(60*60*24*7)
tokenHead: 'Bearer ' #JWT负载中拿到开头

=========================================Linux cmd
systemctl reload  smb&& systemctl restart smb && systemctl restart nmb
systemctl stop firewalld  && setenforce 0 
#防火墙开启的情况下，把端口号8080单独打开，否则被防火墙拦住，外部不能访问
firewall-cmd --zone=public --add-port=8080/tcp --permanent 
firewall-cmd --reload

=========================================java常用的第三方库：
==Hutool：
Java工具包，包括常用工具类和方法：Convert、DateUtil、StrUtil、、、


=========================================sql
# table record
insert into  users (id, email, password, name, createdAt) values ((select LOCALTIMESTAMP()), "3042873385@qq.com", "1223ww3", "zzz", 1594537596942234);
UPDATE users SET createdAt="123";

# table field
ALTER TABLE users MODIFY createdAt VARCHAR(100) NOT NULL DEFAULT "2020-8-15";

# db
drop database mall_test;


=========================================DB底层
==数据库分页
数据库分页

==分库分表

==连接池
druid:数据库连接池组件

==sql
#SQL通配符：
%：替代0个或多个字符
_：替代一个字符

=========================================redis
#clear all keys
flushall  
#redis密码修改
config set requirepass 123456
redis-cli -a 123456
#查看全部的key
keys *

=========================================RabbitMQ
==消息模型：
标志	中文名	英文名	描述
P	生产者	Producer	消息的发送者，可以将消息发送到交换机
C	消费者	Consumer	消息的接收者，从队列中获取消息进行消费
X	交换机	Exchange	接收生产者发送的消息，并根据路由键发送给指定队列
Q	队列	Queue	    存储从交换机发来的消息
type	交换机类型	type	direct表示直接根据路由键（orange/black）发送消息

=========================================jvm
==classpath和classpath*区别： 
classpath：只会到你的class路径中查找找文件。
classpath*：不仅包含class路径，还包括jar文件中（class路径）进行查找。


=========================================English
Authentication：用户认证
Authorization：授权
Authority：权限
Granted：授予
Criteria：标准
Stereotype：模式
Nick name：昵称
Credentials：资格





































